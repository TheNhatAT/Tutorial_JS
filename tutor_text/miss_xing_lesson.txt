- There are three module types:
    1. Built-in: http, fs (file system), stream, buffer, v.v
        -> just need use: const http = require('http');
    2. 3rd party library
        -> just need use: const mocha = require('mocha');
    3. My own module
        -> just need use: require("./name_js.js")

- How require() work (flow):
    1. Resolve: find absolutely path
    2. Load: load the file (.js)
    3. Wrapper: private scope
    4. Evaluate: VM load the code
    5. Cached: if you return a object -> require('..') return a cached
    version even you require more than 1. (the same object)
    --> return module.exports

- Resolve + Load:
    1. require('fs') => not start with './' or '../'
                        require in core module
                        3rd party in node_modules folder

    2. require('./ || ../') => my own module .js
                            if it is folder -> load index.js

    3. require('folder_name') => in package.json

- Wrapper:
    1. Everything is inside a wrapper function
Proxy [
  [
    '(function (exports, require, module, __filename, __dirname) { ',
    '\n});'
  ],
  { set: [Function: set], defineProperty: [Function: defineProperty] }
]

- exports vs module.exports:
    1. exports
    2. module.exports
    --> First: two things above point to the same object

*********************
Buffer:
- It's designed to work with raw binary data
- Use with steam: I/O system, HTTP

Path:
- Using for multiple OS (linux, windows,v.v)
- require('path');

Stream (for huge file):
- There are four types of stream:
    + Readable -> fs.createReadStream
    + Writable -> fs.createWriteStream
    + Duplex (song cÃ´ng) -> socket => HttpRequest (w), HttpResponse (r)
    + Transform .txt --zlib.createGzip--> .zip

********************
Node Project Manager:npm
    - semantic version: vd:"moment": "^2.29.1"
        + 1 --> path version | bug fix
        + 29 --> minor version | add new feature | bugfix
        + 2 --> major version | a lot of updates | (may) break changes
        + ^ --> update the minor version
        + ~ --> only update patch version
    - package-lock.json:
        + track the versions of every dependencies which is used
        + manually change (by yourself)